import { black, white } from "./chess.js";
import { test, expectMoves, expectState, expectWinner } from "./helpers.js";

test("pawns can only double move from their starting row", () => {
  expectMoves(`
........
...♟....
........
........
........
........
........
........

........
...♟....
...x....
...x....
........
........
........
........
`);

  expectMoves(`
........
........
...♟....
........
........
........
........
........

........
........
...♟....
...x....
........
........
........
........
`);

  expectMoves(`
........
........
........
........
........
........
....♙...
........

........
........
........
........
....x...
....x...
....♙...
........
`);

  expectMoves(`
........
........
........
........
........
....♙...
........
........

........
........
........
........
....x...
....♙...
........
........
`);
});

test(`pawns capture diagonally`, () => {
  expectMoves(`
........
........
..♞.♞...
...♙....
........
........
........
........

........
........
..xxx...
...♙....
........
........
........
........
`);
});

test("pawns can be promoted", () => {
  expectState(`
...x....
...♙....
........
........
........
........
........
........

...♕....
........
........
........
........
........
........
........
`);

  expectState(`
........
........
........
........
........
........
...♟....
...x....

........
........
........
........
........
........
........
...♛....
`);
});

test("pawns do not knock out tiles", () => {
  expectState(`
........
........
...♟....
...x....
........
........
........
........

........
........
........
...♟....
........
........
........
........
`);
});

test("non-pawns knock out tiles", () => {
  expectState(`
........
........
...♘....
........
....x...
........
........
........

........
........
........
........
....♘̰...
........
........
........
`);

  expectState(`
........
........
...x....
........
....♘̰...
........
........
........

........
........
...♘̰....
........
.... ...
........
........
........
`);
});

test("sliding pieces are blocked by dropped tiles", () => {
  expectMoves(`
........
........
...♗....
.... ...
........
........
........
........

.x...x..
..x.x...
...♗....
..x. ...
.x......
x.......
........
........
`);
});

test("pushing pieces off the edges of the board", () => {
  expectState(`
..♛̽.....
........
........
........
..♖.....
........
........
........

..♖̰.....
........
........
........
........
........
........
........
`);
});

test("pushing pieces into dropped tiles", () => {
  expectState(`
.. .....
..♛̽.....
........
........
..♖.....
........
........
........

.. .....
..♖̰.....
........
........
........
........
........
........
`);
});

test("pushed pieces do not knock out tiles", () => {
  expectState(`
........
..♛̽.....
........
........
..♖.....
........
........
........

..♛.....
..♖̰.....
........
........
........
........
........
........
`);
});

test("pushing pieces on shaking tiles", () => {
  expectState(`
........
..♛̰̽.....
........
........
..♖.....
........
........
........

..♛.....
.. .....
........
........
........
........
........
........
`);
});

test("winning by pushing the king off the board", () => {
  expectWinner(
    white,
    `
♚̽.......
........
........
........
♖.......
........
........
........
`,
  );

  expectWinner(
    black,
    `
........
........
........
♜̌.......
........
........
........
♔̽.......
`,
  );
});
